// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PinageAPI.Data;

#nullable disable

namespace PinageAPI.Migrations
{
    [DbContext(typeof(PinageDbContext))]
    partial class PinageDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PinageAPI.Models.Domain.Asset", b =>
                {
                    b.Property<int>("AssetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssetId"));

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("ContentUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("FileFormat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UploadedBy")
                        .HasColumnType("int");

                    b.HasKey("AssetId");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("PinageAPI.Models.Domain.Device", b =>
                {
                    b.Property<int>("DeviceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeviceId"));

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<long?>("CacheSize")
                        .HasColumnType("bigint");

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastHeartbeat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastSyncTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DeviceId");

                    b.HasIndex("LocationId");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("PinageAPI.Models.Domain.DeviceSchedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"));

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("DaysOfWeek")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DeviceId")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("EndTime")
                        .HasColumnType("time");

                    b.Property<int?>("PlaylistId")
                        .HasColumnType("int");

                    b.Property<int>("Priority")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<TimeSpan?>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("ScheduleId");

                    b.HasIndex("DeviceId");

                    b.HasIndex("PlaylistId");

                    b.ToTable("DeviceSchedules");
                });

            modelBuilder.Entity("PinageAPI.Models.Domain.DeviceStatus", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<decimal?>("CpuUsage")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<int?>("CurrentAssetId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentPlaylistId")
                        .HasColumnType("int");

                    b.Property<int?>("DeviceId")
                        .HasColumnType("int");

                    b.Property<int?>("ErrorCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("LastError")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("MemoryUsage")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime>("ReportedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Temperature")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("StatusId");

                    b.HasIndex("CurrentAssetId");

                    b.HasIndex("CurrentPlaylistId");

                    b.HasIndex("DeviceId");

                    b.ToTable("DeviceStatuses");
                });

            modelBuilder.Entity("PinageAPI.Models.Domain.EngagementSummary", b =>
                {
                    b.Property<int>("SummaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SummaryId"));

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<decimal?>("AverageAttentionScore")
                        .HasPrecision(3, 2)
                        .HasColumnType("decimal(3,2)");

                    b.Property<decimal>("AverageViewDuration")
                        .HasPrecision(6, 2)
                        .HasColumnType("decimal(6,2)");

                    b.Property<DateTime>("DateSummary")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeviceId")
                        .HasColumnType("int");

                    b.Property<int>("PeakViewerCount")
                        .HasColumnType("int");

                    b.Property<int>("TotalEngagementSeconds")
                        .HasColumnType("int");

                    b.Property<int>("TotalViewers")
                        .HasColumnType("int");

                    b.HasKey("SummaryId");

                    b.HasIndex("AssetId");

                    b.HasIndex("DeviceId");

                    b.ToTable("EngagementSummaries");
                });

            modelBuilder.Entity("PinageAPI.Models.Domain.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationId"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LocationTypeId")
                        .HasColumnType("int");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationId");

                    b.HasIndex("LocationTypeId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("PinageAPI.Models.Domain.LocationType", b =>
                {
                    b.Property<int>("LocationTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationTypeId"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationTypeId");

                    b.ToTable("LocationTypes");
                });

            modelBuilder.Entity("PinageAPI.Models.Domain.Playlist", b =>
                {
                    b.Property<int>("PlaylistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlaylistId"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlaylistName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlaylistId");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("PinageAPI.Models.Domain.PlaylistItem", b =>
                {
                    b.Property<int>("PlaylistItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlaylistItemId"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<int?>("DisplayDuration")
                        .HasColumnType("int");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PlaylistId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("PlaylistItemId");

                    b.HasIndex("AssetId");

                    b.HasIndex("PlaylistId");

                    b.ToTable("PlaylistItems");
                });

            modelBuilder.Entity("PinageAPI.Models.Domain.ViewerEngagement", b =>
                {
                    b.Property<int>("EngagementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EngagementId"));

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<decimal?>("AttentionScore")
                        .HasPrecision(3, 2)
                        .HasColumnType("decimal(3,2)");

                    b.Property<decimal?>("AverageDistance")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime>("DetectionDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeviceId")
                        .HasColumnType("int");

                    b.Property<string>("EstimatedAgeRange")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenderDistribution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlaylistItemId")
                        .HasColumnType("int");

                    b.Property<int>("ViewDurationSeconds")
                        .HasColumnType("int");

                    b.Property<int>("ViewerCount")
                        .HasColumnType("int");

                    b.HasKey("EngagementId");

                    b.HasIndex("AssetId");

                    b.HasIndex("DeviceId");

                    b.HasIndex("PlaylistItemId");

                    b.ToTable("ViewerEngagements");
                });

            modelBuilder.Entity("PinageAPI.Models.Domain.Device", b =>
                {
                    b.HasOne("PinageAPI.Models.Domain.Location", "Location")
                        .WithMany("Devices")
                        .HasForeignKey("LocationId");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("PinageAPI.Models.Domain.DeviceSchedule", b =>
                {
                    b.HasOne("PinageAPI.Models.Domain.Device", "Device")
                        .WithMany("DeviceSchedules")
                        .HasForeignKey("DeviceId");

                    b.HasOne("PinageAPI.Models.Domain.Playlist", "Playlist")
                        .WithMany("DeviceSchedules")
                        .HasForeignKey("PlaylistId");

                    b.Navigation("Device");

                    b.Navigation("Playlist");
                });

            modelBuilder.Entity("PinageAPI.Models.Domain.DeviceStatus", b =>
                {
                    b.HasOne("PinageAPI.Models.Domain.Asset", "CurrentAsset")
                        .WithMany("DeviceStatuses")
                        .HasForeignKey("CurrentAssetId");

                    b.HasOne("PinageAPI.Models.Domain.Playlist", "CurrentPlaylist")
                        .WithMany("DeviceStatuses")
                        .HasForeignKey("CurrentPlaylistId");

                    b.HasOne("PinageAPI.Models.Domain.Device", "Device")
                        .WithMany("DeviceStatuses")
                        .HasForeignKey("DeviceId");

                    b.Navigation("CurrentAsset");

                    b.Navigation("CurrentPlaylist");

                    b.Navigation("Device");
                });

            modelBuilder.Entity("PinageAPI.Models.Domain.EngagementSummary", b =>
                {
                    b.HasOne("PinageAPI.Models.Domain.Asset", "Asset")
                        .WithMany("EngagementSummaries")
                        .HasForeignKey("AssetId");

                    b.HasOne("PinageAPI.Models.Domain.Device", "Device")
                        .WithMany("EngagementSummaries")
                        .HasForeignKey("DeviceId");

                    b.Navigation("Asset");

                    b.Navigation("Device");
                });

            modelBuilder.Entity("PinageAPI.Models.Domain.Location", b =>
                {
                    b.HasOne("PinageAPI.Models.Domain.LocationType", "LocationType")
                        .WithMany("Locations")
                        .HasForeignKey("LocationTypeId");

                    b.Navigation("LocationType");
                });

            modelBuilder.Entity("PinageAPI.Models.Domain.PlaylistItem", b =>
                {
                    b.HasOne("PinageAPI.Models.Domain.Asset", "Asset")
                        .WithMany("PlaylistItems")
                        .HasForeignKey("AssetId");

                    b.HasOne("PinageAPI.Models.Domain.Playlist", "Playlist")
                        .WithMany("PlaylistItems")
                        .HasForeignKey("PlaylistId");

                    b.Navigation("Asset");

                    b.Navigation("Playlist");
                });

            modelBuilder.Entity("PinageAPI.Models.Domain.ViewerEngagement", b =>
                {
                    b.HasOne("PinageAPI.Models.Domain.Asset", "Asset")
                        .WithMany("ViewerEngagements")
                        .HasForeignKey("AssetId");

                    b.HasOne("PinageAPI.Models.Domain.Device", "Device")
                        .WithMany("ViewerEngagements")
                        .HasForeignKey("DeviceId");

                    b.HasOne("PinageAPI.Models.Domain.PlaylistItem", "PlaylistItem")
                        .WithMany("ViewerEngagements")
                        .HasForeignKey("PlaylistItemId");

                    b.Navigation("Asset");

                    b.Navigation("Device");

                    b.Navigation("PlaylistItem");
                });

            modelBuilder.Entity("PinageAPI.Models.Domain.Asset", b =>
                {
                    b.Navigation("DeviceStatuses");

                    b.Navigation("EngagementSummaries");

                    b.Navigation("PlaylistItems");

                    b.Navigation("ViewerEngagements");
                });

            modelBuilder.Entity("PinageAPI.Models.Domain.Device", b =>
                {
                    b.Navigation("DeviceSchedules");

                    b.Navigation("DeviceStatuses");

                    b.Navigation("EngagementSummaries");

                    b.Navigation("ViewerEngagements");
                });

            modelBuilder.Entity("PinageAPI.Models.Domain.Location", b =>
                {
                    b.Navigation("Devices");
                });

            modelBuilder.Entity("PinageAPI.Models.Domain.LocationType", b =>
                {
                    b.Navigation("Locations");
                });

            modelBuilder.Entity("PinageAPI.Models.Domain.Playlist", b =>
                {
                    b.Navigation("DeviceSchedules");

                    b.Navigation("DeviceStatuses");

                    b.Navigation("PlaylistItems");
                });

            modelBuilder.Entity("PinageAPI.Models.Domain.PlaylistItem", b =>
                {
                    b.Navigation("ViewerEngagements");
                });
#pragma warning restore 612, 618
        }
    }
}
